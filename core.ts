// use this pre-filled response to test https://docs.google.com/forms/d/e/1FAIpQLSdzfXLKU6glQUmuUs2DWUQZa3FVRgrPIHUYDP3j7S0CYGH99g/viewform?edit2=2_ABaOnucjpkYnF-A7rEzDXB_VhaXmiwYgHqVpiL5xwtp493od-1EbU1eRUW-oHlfnM3jV0K0

// TODO: rewrite in TypeScript because fuck vanilla JS

// run whenever a submission event is detected, and accept the event itself

import { GForms, Events, GSheets, Base, GDocs, GDrive, GMail } from "./general.ts";
import * as retrieval from "./retrieval";
import * as construction from "./construction";
import * as delivery from "./delivery";
import { TEMPLATE_DOCS_ID } from "./general.ts";

// START HERE!
function onSubmit(event: GoogleAppsScript.Events.FormsOnFormSubmit) {
  let sourceForm: GForms.Form = event.source; // a Form object representing the form itself (the source of the event)
  let responseObject: GForms.FormResponse = event.response; // a FormResponse object from the submission event
  let responseTime: Base.Date = responseObject.getTimestamp(); // we need the timestamp of the submission in order to identify it in the GSheets in the case of edited submissions, etc.

  // build a list and dict encapsulating the header rows of the spreadsheet (to be used as template IDs) and a dict linking header items to response items
  let builtTemplateIDTuple: Array<any> = retrieval.buildTemplateIDDict(sourceForm.getDestinationType() == FormApp.DestinationType.SPREADSHEET ? sourceForm.getDestinationId() : retrieval.raiseException("No spreadsheet to build dict from"));
  let templateIDList: Array<string> = builtTemplateIDTuple[0];
  let templateIDDict: {} = builtTemplateIDTuple[1];

  templateIDDict = retrieval.fillTemplateIDDict(sourceForm.getDestinationId(), templateIDDict, templateIDList, responseTime);
  templateIDDict = retrieval.specialProcessing(templateIDDict);

  // TODO: build the document itself from a template (note the convention: a 'print' is generated by filling in a 'template')

  let printDocObject = construction.makePrintDocs(TEMPLATE_DOCS_ID);
  printDocObject = construction.setupPrintDocs(printDocObject, construction.buildDocName(templateIDDict, '[INVOICE] - ', ["Formal Company Name"], '_UP CAPES 2324'));
  printDocObject = construction.fillPrintDocs(printDocObject, templateIDDict);

  // TODO: build an email message and send it off to the email address recorded by the template IDs

  printDocObject.saveAndClose();

  let printPDFObject = delivery.makePrintPDF(printDocObject.getId());

  printPDFObject.addViewer(templateIDDict["Email Address"]);
  printDocObject.addEditor(templateIDDict["Email Address"]);

  delivery.sendEmail(templateIDDict["Email Address"], printPDFObject.getId(), printDocObject.getId(), templateIDDict["Formal Company Name"], templateIDDict["Name of Marketer"]);
}
